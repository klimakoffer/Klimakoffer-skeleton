var documenterSearchIndex = {"docs":
[{"location":"license/#License","page":"License","title":"License","text":"","category":"section"},{"location":"license/","page":"License","title":"License","text":"MIT LicenseCopyright (c) 2021-present Gregor Gassner, Johannes Markert, Andrés Rueda-Ramírez, Michael Schlottke-LakemperPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","category":"page"},{"location":"reference/#MyClimateModel.jl-API","page":"Reference","title":"MyClimateModel.jl API","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"CurrentModule = MyClimateModel","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [MyClimateModel]","category":"page"},{"location":"reference/#MyClimateModel.Mesh","page":"Reference","title":"MyClimateModel.Mesh","text":"function Mesh(nx=128)\n\nConstructor for the mesh struct\n\n\n\n\n\n","category":"type"},{"location":"reference/#MyClimateModel.Model-Tuple{Any}","page":"Reference","title":"MyClimateModel.Model","text":"function Model(mesh,...)\n\nConstructor for the model struct\n\n\n\n\n\n","category":"method"},{"location":"reference/#MyClimateModel.compute_equilibrium!","page":"Reference","title":"MyClimateModel.compute_equilibrium!","text":"compute_equilibrium!(max_years=100, rel_error=2e-5)\n\nFunction to run an EBM simulation until an equilibrium temperature is found\n\nmax_years is the maximum number of annual cycles to be computed when searching for equilibrium\nrel_error is the tolerance for global temperature equilibrium (default is 2e-5).\n\n\n\n\n\n","category":"function"},{"location":"reference/#MyClimateModel.compute_matrix-Tuple{Any, Any, Any}","page":"Reference","title":"MyClimateModel.compute_matrix","text":"compute_matrix(mesh,num_steps_year,model)\n\nFunction to compute the system matrix of the EBM operator\n\n\n\n\n\n","category":"method"},{"location":"reference/#MyClimateModel.update_rhs!-Tuple{Any}","page":"Reference","title":"MyClimateModel.update_rhs!","text":"update_rhs!(rhs, ...)\n\nFunction to compute/update right-hand side of the system of equations that needs to be solved\n\n\n\n\n\n","category":"method"},{"location":"#My-Climate-Model","page":"Home","title":"My Climate Model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Insert a short description of your climate code, how to how to use it, and how to contribute to it.","category":"page"},{"location":"","page":"Home","title":"Home","text":"MyClimateModel contains a skeletton to implement a 2D Energy Balance Model (EBM) in Julia based on Klimakoffer.jl.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have not yet installed Julia, please follow the instructions for your operating system. MyClimateModel works with Julia v1.7.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To obtain MyClimateModel, clone the repository and use the Julia package manager Pkg to install all dependencies:","category":"page"},{"location":"","page":"Home","title":"Home","text":"git clone git@github.com:klimakoffer/Klimakoffer-skeleton.jl.git MyClimateModel.jl\ncd MyClimateModel.jl\njulia --project=@. -e 'import Pkg; Pkg.instantiate()'","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, start Julia with the --project flag set to your local clone, e.g.,","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia --project=.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In the Julia REPL, first load the package","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using MyClimateModel","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now you can create the (empty) mesh and model with","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> mesh = Mesh()\nMesh() with 128×65 degrees of freedom\n\njulia> model = Model(mesh)\nModel() with 128×65 degrees of freedom","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can perform the initial tests with","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]test","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"#License-and-contributing","page":"Home","title":"License and contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MyClimateModel is licensed under the MIT license (see LICENSE.md).","category":"page"}]
}
